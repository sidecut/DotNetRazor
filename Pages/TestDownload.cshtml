@page
@model TestDownloadModel
@{
    ViewData["Title"] = "Test Download";
}

<div id="downloadApp" v-cloak>
    <div class="row">
        <div class="col-md-3">
            <h2>Download stuff</h2>
            <form action="~/TestDownload" method="post" v-on:submit="onSubmit" ref="form">
                <label>Sleep time:<input type="number" asp-for="SleepTime" v-model="SleepTime" /><input type="button" v-on:click="reset" value="Reset" /></label>
                <button type="submit">Initiate Download</button>
                <button v-on:click.prevent="onCancel">Cancel</button>
                <div>
                    This would normally be a hidden field:
                    <input x-type="hidden" name="Nonce" v-model="Nonce" />
                </div>
            </form>
        </div>
    </div>
    <h2>&nbsp;</h2>
    <div class="row" v-show="loading">
        <div class="col-md-3" style="border: 1px solid gray">
            <h2>Form to display</h2>
            <p>The content is loading...<img src="~/images/Spinner.svg" style="height: 48px; width: 48px;" /></p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    var vm = new Vue({
        data: {
            SleepTime: @Html.Raw(Model.SleepTime),
            loading: false,
            Nonce: "",
            monitoring: false,
            intervalHandle: 0
        },
        el: "#downloadApp",
        mounted() {
            console.log("Mounted");
        },
        methods: {
            onCancel() {
                console.log("Cancel");
                this.stopMonitoringNonce();
            },
            onSubmit() {
                this.Nonce = new Date().valueOf();
                console.log("Submit with Nonce", this.Nonce);
                this.loading = true;
                this.startMonitoringNonce();

                var form = this.$refs.form;
                console.log(form);
            },
            reset() {
                this.SleepTime = this.SleepTime ? 0 : 5000;
            },
            startMonitoringNonce() {
                const self = this;
                this.monitoring = true;
                this.intervalHandle = window.setInterval(() => {
                    console.log("Checking Nonce cookie");
                    if (document.cookie.includes("Download-nonce=" + this.Nonce)) {
                        this.stopMonitoringNonce();
                    }
                }, 1000);
            },
            stopMonitoringNonce() {
                this.loading = this.monitoring = false;
                this.Nonce = null;
                window.clearInterval(this.intervalHandle);
            }
        }
    });
    </script>
}
